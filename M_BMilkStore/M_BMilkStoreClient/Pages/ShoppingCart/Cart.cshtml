@page
@model M_BMilkStoreClient.Pages.CartModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewData["Title"] - My ASP.NET Application</title>
    <link rel="stylesheet" href="~/css/ShoppingCart.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
    <style>
        .cart-items-container {
            max-height: 90vh;
            overflow-y: auto;
        }

        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
    </style>
</head>
<body>
    <section>
        <div class="toast-container">
            <div id="registerToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000">
                <div class="toast-header">
                    <strong class="mr-auto">Error</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Please Login
                </div>
            </div>
        </div>
    </section>
    <section class="h-100 h-custom" style="background-color: #d2c9ff;">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12">
                    <div class="card card-registration card-registration-2" style="border-radius: 15px;">
                        <div class="card-body p-0">
                            <div class="row g-0">
                                <div class="col-lg-8">
                                    <div class="p-5 h-100 cart-items-container">
                                        <div class="d-flex justify-content-center align-items-center mb-5">
                                            <h1 class="fw-bold mb-0">Shopping Cart</h1>
                                        </div>
                                        @{
                                            double TotalPrice = 0;
                                            int TotalItems = 0;
                                        }
                                        @foreach (var cartItem in Model.Carts)
                                        {
                                            <hr class="my-4">
                                            <div class="row mb-4 d-flex justify-content-between align-items-center">
                                                <div class="col-md-2 col-lg-2 col-xl-2">
                                                    <img src="@cartItem.Product.Image" alt="Product Image" class="img-fluid rounded-3">
                                                </div>
                                                <div class="col-md-3 col-lg-3 col-xl-3">
                                                    <h6 class="text-muted">@cartItem.Product.Name</h6>
                                                    <h6 class="mb-0">@cartItem.Product.Description</h6>
                                                </div>
                                                <div class="col-md-3 col-lg-3 col-xl-2 d-flex">
                                                    <button class="btn btn-link px-2" onclick="updateQuantity(@cartItem.Product.ProductId, -1, @cartItem.Product.Price)">
                                                        <i class="fas fa-minus"></i>
                                                    </button>
                                                    <input id="quantityInput-@cartItem.Product.ProductId" min="1" name="quantity" value="@cartItem.Quantity" type="number" class="form-control form-control-sm" oninput="updatePrice(@cartItem.Product.ProductId, @cartItem.Product.Price)">
                                                    <button class="btn btn-link px-2" onclick="updateQuantity(@cartItem.Product.ProductId, 1, @cartItem.Product.Price)">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>
                                                <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                                                    <h6 class="mb-0">€<span id="totalPrice-@cartItem.Product.ProductId">@((cartItem.Product.Price * cartItem.Quantity).ToString("F2"))</span></h6>
                                                </div>
                                                <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                                    <a class="btn btn-danger" asp-page-handler="Delete" asp-route-id="@cartItem.Product.ProductId">
                                                        <i class="fas fa-times"></i>
                                                    </a>
                                                </div>
                                            </div>
                                            TotalPrice += cartItem.Quantity * cartItem.Product.Price;
                                            TotalItems += cartItem.Quantity;
                                        }
                                        <hr class="my-4">

                                        <div class="pt-5">
                                            <h6 class="mb-0">
                                                <a href="/Index" class="text-body">
                                                    <i class="fas fa-long-arrow-alt-left me-2"></i>Back to shop
                                                </a>
                                            </h6>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 bg-body-tertiary">
                                    <div class="p-5">
                                        <h3 class="fw-bold mb-5 mt-2 pt-1">Summary</h3>
                                        <hr class="my-4">

                                        <div class="d-flex justify-content-between mb-4">
                                            <h5 class="text-uppercase">Items @TotalItems</h5>
                                            <h5> <span id="totalCartPrice">@TotalPrice.ToString("F2")</span></h5>
                                        </div>

                                        <h5 class="text-uppercase mb-3">Shipping</h5>

                                        <div class="mb-4 pb-2">
                                            <select id="deliveryOption" class="form-select" onchange="updateCartTotalPrice()">
                                                <option value="5.00">Standard Delivery - €5.00</option>
                                                <option value="10.00">Express Delivery - €10.00</option>
                                            </select>
                                        </div>

                                        <hr class="my-4">

                                        <div class="d-flex justify-content-between mb-5">
                                            <h5 class="text-uppercase">Total price</h5>
                                            <h5><span id="grandTotalPrice">@TotalPrice.ToString("F2")</span></h5>
                                        </div>

                                        <!-- Form to capture total price and delivery option -->
                                        <form method="post" asp-page-handler="ProceedToCheckout">
                                            <input type="hidden" id="hiddenTotalPrice" name="TotalPrice" value="@TotalPrice.ToString("F2")" />
                                            <input type="hidden" id="hiddenDeliveryOptionName" name="DeliveryOptionName" value="Standard Delivery" />
                                            <input type="hidden" id="hiddenDeliveryOptionValue" name="DeliveryOptionValue" value="5.00" />

                                            <button type="submit" class="btn btn-dark btn-block btn-lg" onclick="setHiddenInputs()">
                                                Proceed to Checkout
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            async function updateQuantity(productId, change, itemPrice) {
                const quantityInput = document.getElementById(`quantityInput-${productId}`);
                let newQuantity = parseInt(quantityInput.value) + change;

                if (newQuantity < 1) newQuantity = 1; // Ensure the minimum quantity is 1

                const response = await fetch(`?handler=UpdateQuantity&id=${productId}&quantity=${newQuantity}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        quantityInput.value = newQuantity;
                        updatePrice(productId, itemPrice);
                    } else {
                        alert(result.message);
                    }
                }
            }

            function updatePrice(productId, itemPrice) {
                const quantityInput = document.getElementById(`quantityInput-${productId}`);
                const totalPriceElement = document.getElementById(`totalPrice-${productId}`);
                const newQuantity = parseInt(quantityInput.value);
                const newTotalPrice = (itemPrice * newQuantity).toFixed(2);
                totalPriceElement.textContent = ` ${newTotalPrice}`;
                updateCartTotalPrice();
            }

            function updateCartTotalPrice() {
                let totalCartPrice = 0;
                const priceElements = document.querySelectorAll('[id^="totalPrice-"]');
                priceElements.forEach(element => {
                    totalCartPrice += parseFloat(element.textContent);
                });

                const deliveryOption = document.getElementById("deliveryOption");
                const deliveryCharge = parseFloat(deliveryOption.value);

                totalCartPrice += deliveryCharge;

                document.getElementById("totalCartPrice").textContent = totalCartPrice.toFixed(2);
                document.getElementById("grandTotalPrice").textContent = totalCartPrice.toFixed(2);
                document.getElementById("hiddenTotalPrice").value = totalCartPrice.toFixed(2);
                document.getElementById("hiddenDeliveryOptionName").value = deliveryOption.options[deliveryOption.selectedIndex].text;
                document.getElementById("hiddenDeliveryOptionValue").value = deliveryOption.value;
            }

            function setHiddenInputs() {
                const deliveryOption = document.getElementById("deliveryOption");
                document.getElementById("hiddenDeliveryOptionName").value = deliveryOption.options[deliveryOption.selectedIndex].text;
                document.getElementById("hiddenDeliveryOptionValue").value = deliveryOption.value;
            }

            window.updateQuantity = updateQuantity;
            window.updatePrice = updatePrice;
            window.updateCartTotalPrice = updateCartTotalPrice;
            window.setHiddenInputs = setHiddenInputs;

            updateCartTotalPrice();
        });
    </script>
</body>
</html>
